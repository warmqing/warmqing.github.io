<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oolong Box</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.oolongbox.com/"/>
  <updated>2019-04-07T09:26:18.609Z</updated>
  <id>https://www.oolongbox.com/</id>
  
  <author>
    <name>warmqing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>表驱动方法在java、scala中的实践</title>
    <link href="https://www.oolongbox.com/2019/04/07/tabledriven/"/>
    <id>https://www.oolongbox.com/2019/04/07/tabledriven/</id>
    <published>2019-04-07T09:26:18.608Z</published>
    <updated>2019-04-07T09:26:18.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表驱动方法在java、scala中的实践"><a href="#表驱动方法在java、scala中的实践" class="headerlink" title="表驱动方法在java、scala中的实践"></a>表驱动方法在java、scala中的实践</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">表驱动法是一种编程模式（Scheme），从表里面查找信息而不使用逻辑语句（if 和case） 它的好处是消除代码里面到处出现的if、else、swith语句，让凌乱代码变得简明和清晰。</span><br><span class="line">对简单情况而言，表驱动方法可能仅仅使逻辑语句更容易和直白，但随着逻辑的越来越复杂，表驱动法就愈发有吸引力。</span><br></pre></td></tr></table></figure><p>个人感觉表驱动和策略模式很相似</p><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>策略枚举：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> OptEnum &#123;</span><br><span class="line">    OPT1(<span class="number">1</span>, <span class="string">"OPT1"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt1 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    OPT2(<span class="number">2</span>, <span class="string">"OPT2"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt2 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    OPT3(<span class="number">3</span>, <span class="string">"OPT1"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt3 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String text;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value;</span><br><span class="line"></span><br><span class="line">    OptEnum(<span class="keyword">int</span> value, String text) &#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.text = text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OptEnum <span class="title">get</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (OptEnum opt : OptEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (opt.getValue() == value)</span><br><span class="line">                <span class="keyword">return</span> opt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> optType;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOptType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> optType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOptType</span><span class="params">(<span class="keyword">int</span> optType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.optType = optType;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>场景类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ParamVo param = <span class="keyword">new</span> ParamVo();</span><br><span class="line">        param.setOptType(OptEnum.OPT1.getValue());</span><br><span class="line">        OptEnum opt = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> ((opt = OptEnum.get(param.getOptType())) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">        opt.opt(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scala"><a href="#scala" class="headerlink" title="scala"></a>scala</h2><p>操作类：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">TableDriven</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt1 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt1 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt2 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt2 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt3 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt3 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> optMap = <span class="type">Map</span>(<span class="type">OptEum</span>.<span class="type">OPT1</span>.id -&gt; opt1,</span><br><span class="line">    <span class="type">OptEum</span>.<span class="type">OPT2</span>.id -&gt; opt2,</span><br><span class="line">    <span class="type">OptEum</span>.<span class="type">OPT3</span>.id -&gt; opt3)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">opt</span></span>(param: <span class="type">ParamVo</span>) = &#123;</span><br><span class="line">    <span class="keyword">val</span>  opt = optMap.get(param.optType)</span><br><span class="line">    <span class="keyword">if</span>(!opt.nonEmpty)&#123;</span><br><span class="line">      <span class="comment">//do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    opt.get.apply(param)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>枚举：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">OptEum</span> <span class="keyword">extends</span> <span class="title">Enumeration</span> </span>&#123;</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT1</span> = <span class="type">Value</span>(<span class="number">1</span>, <span class="string">"OPT1"</span>)</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT2</span> = <span class="type">Value</span>(<span class="number">2</span>, <span class="string">"OPT2"</span>)</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT3</span> = <span class="type">Value</span>(<span class="number">3</span>, <span class="string">"OPT3"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParamVo</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> _optType: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">optType</span> </span>= _optType</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">optType_=</span></span>(v: <span class="type">Int</span>) = &#123;</span><br><span class="line">    _optType = v</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>场景类：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> param = <span class="keyword">new</span> <span class="type">ParamVo</span></span><br><span class="line">    param.optType = <span class="type">OptEum</span>.<span class="type">OPT1</span>.id</span><br><span class="line">    <span class="type">TableDriven</span>.opt(param)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;表驱动方法在java、scala中的实践&quot;&gt;&lt;a href=&quot;#表驱动方法在java、scala中的实践&quot; class=&quot;headerlink&quot; title=&quot;表驱动方法在java、scala中的实践&quot;&gt;&lt;/a&gt;表驱动方法在java、scala中的实践&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="java" scheme="https://www.oolongbox.com/tags/java/"/>
    
      <category term="scala" scheme="https://www.oolongbox.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.oolongbox.com/2019/04/03/hello-world/"/>
    <id>https://www.oolongbox.com/2019/04/03/hello-world/</id>
    <published>2019-04-03T02:20:26.184Z</published>
    <updated>2019-04-03T02:12:52.601Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
