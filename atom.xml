<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oolong Box</title>
  
  <subtitle>Oolong is a happy accident,Serendipity is life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://oolongbox.com/"/>
  <updated>2019-04-08T15:19:40.633Z</updated>
  <id>https://oolongbox.com/</id>
  
  <author>
    <name>warmqing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>表驱动方法在java、scala中的实践</title>
    <link href="https://oolongbox.com/2019/04/08/tabledriven/"/>
    <id>https://oolongbox.com/2019/04/08/tabledriven/</id>
    <published>2019-04-08T11:11:51.000Z</published>
    <updated>2019-04-08T15:19:40.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表驱动方法在java、scala中的实践"><a href="#表驱动方法在java、scala中的实践" class="headerlink" title="表驱动方法在java、scala中的实践"></a>表驱动方法在java、scala中的实践</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">表驱动法是一种编程模式（Scheme），从表里面查找信息而不使用逻辑语句（if 和case） 它的好处是消除代码里面到处出现的if、else、swith语句，让凌乱代码变得简明和清晰。</span><br><span class="line">对简单情况而言，表驱动方法可能仅仅使逻辑语句更容易和直白，但随着逻辑的越来越复杂，表驱动法就愈发有吸引力。</span><br></pre></td></tr></table></figure><p>个人感觉表驱动和策略模式很相似</p><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>策略枚举：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> OptEnum &#123;</span><br><span class="line">    OPT1(<span class="number">1</span>, <span class="string">"OPT1"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt1 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    OPT2(<span class="number">2</span>, <span class="string">"OPT2"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt2 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    OPT3(<span class="number">3</span>, <span class="string">"OPT1"</span>) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"opt3 : do something"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String text;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value;</span><br><span class="line"></span><br><span class="line">    OptEnum(<span class="keyword">int</span> value, String text) &#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.text = text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OptEnum <span class="title">get</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (OptEnum opt : OptEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (opt.getValue() == value)</span><br><span class="line">                <span class="keyword">return</span> opt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">opt</span><span class="params">(ParamVo param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> optType;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOptType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> optType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOptType</span><span class="params">(<span class="keyword">int</span> optType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.optType = optType;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>场景类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ParamVo param = <span class="keyword">new</span> ParamVo();</span><br><span class="line">        param.setOptType(OptEnum.OPT1.getValue());</span><br><span class="line">        OptEnum opt = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> ((opt = OptEnum.get(param.getOptType())) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">        opt.opt(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scala"><a href="#scala" class="headerlink" title="scala"></a>scala</h2><p>操作类：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">TableDriven</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt1 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt1 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt2 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt2 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> opt3 = (param: <span class="type">ParamVo</span>) =&gt; &#123;</span><br><span class="line">    println(<span class="string">"opt3 : do something"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> optMap = <span class="type">Map</span>(<span class="type">OptEum</span>.<span class="type">OPT1</span>.id -&gt; opt1,</span><br><span class="line">    <span class="type">OptEum</span>.<span class="type">OPT2</span>.id -&gt; opt2,</span><br><span class="line">    <span class="type">OptEum</span>.<span class="type">OPT3</span>.id -&gt; opt3)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">opt</span></span>(param: <span class="type">ParamVo</span>) = &#123;</span><br><span class="line">    <span class="keyword">val</span>  opt = optMap.get(param.optType)</span><br><span class="line">    <span class="keyword">if</span>(!opt.nonEmpty)&#123;</span><br><span class="line">      <span class="comment">//do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    opt.get.apply(param)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>枚举：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">OptEum</span> <span class="keyword">extends</span> <span class="title">Enumeration</span> </span>&#123;</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT1</span> = <span class="type">Value</span>(<span class="number">1</span>, <span class="string">"OPT1"</span>)</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT2</span> = <span class="type">Value</span>(<span class="number">2</span>, <span class="string">"OPT2"</span>)</span><br><span class="line">  <span class="keyword">val</span> <span class="type">OPT3</span> = <span class="type">Value</span>(<span class="number">3</span>, <span class="string">"OPT3"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParamVo</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> _optType: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">optType</span> </span>= _optType</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">optType_=</span></span>(v: <span class="type">Int</span>) = &#123;</span><br><span class="line">    _optType = v</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>场景类：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> param = <span class="keyword">new</span> <span class="type">ParamVo</span></span><br><span class="line">    param.optType = <span class="type">OptEum</span>.<span class="type">OPT1</span>.id</span><br><span class="line">    <span class="type">TableDriven</span>.opt(param)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;表驱动方法在java、scala中的实践&quot;&gt;&lt;a href=&quot;#表驱动方法在java、scala中的实践&quot; class=&quot;headerlink&quot; title=&quot;表驱动方法在java、scala中的实践&quot;&gt;&lt;/a&gt;表驱动方法在java、scala中的实践&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;表驱动法是一种编程模式（Scheme），从表里面查找信息而不使用逻辑语句（if 和case） 它的好处是消除代码里面到处出现的if、else、swith语句，让凌乱代码变得简明和清晰。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对简单情况而言，表驱动方法可能仅仅使逻辑语句更容易和直白，但随着逻辑的越来越复杂，表驱动法就愈发有吸引力。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;个人感觉表驱动和策略模式很相似&lt;/p&gt;
&lt;h2 id=&quot;java&quot;&gt;&lt;a href=&quot;#java&quot; class=&quot;headerlink&quot; title=&quot;java&quot;&gt;&lt;/a&gt;java&lt;/h2&gt;&lt;p&gt;策略枚举：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; OptEnum &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OPT1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;OPT1&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ParamVo param)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;opt1 : do something&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OPT2(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;OPT2&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ParamVo param)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;opt2 : do something&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OPT3(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;OPT1&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ParamVo param)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;opt3 : do something&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OptEnum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; value, String text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.text = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; OptEnum &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (OptEnum opt : OptEnum.values()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (opt.getValue() == value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; opt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ParamVo param)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="日志" scheme="https://oolongbox.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="java" scheme="https://oolongbox.com/tags/java/"/>
    
      <category term="scala" scheme="https://oolongbox.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>tracer：倒排索引+快速分类</title>
    <link href="https://oolongbox.com/2019/04/08/tracer/"/>
    <id>https://oolongbox.com/2019/04/08/tracer/</id>
    <published>2019-04-08T09:52:14.900Z</published>
    <updated>2019-04-08T15:10:46.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tracer：倒排索引-快速分类"><a href="#tracer：倒排索引-快速分类" class="headerlink" title="tracer：倒排索引+快速分类"></a>tracer：倒排索引+快速分类</h1><ul><li>索引，是为了加快信息主体查找过程，基于目标信息主体，预先创建的一种储存结构。</li><li>倒排索引（Inverted index），是一种索引方法，基于信息主体的属性值进行构建。</li><li>本工程基于Map+BitSet结构，采用：属性-&gt;属性值-&gt;信息主体唯一标识，预先构建倒排索引，加速查找过程。</li></ul><p><em>source code：</em></p><p><a href="https://github.com/warmqing/tracer" target="_blank" rel="noopener">https://github.com/warmqing/tracer</a></p><h2 id="索引存储"><a href="#索引存储" class="headerlink" title="索引存储"></a>索引存储</h2><p>定义商品属性【Brand，Color，Size】</p><p>分类A</p><table><thead><tr><th>属性名</th><th>属性值</th></tr></thead><tbody><tr><td>Brand（品牌）</td><td>AAA</td></tr><tr><td>Color（颜色）</td><td>Blue，Red，White</td></tr><tr><td>Size（尺寸）</td><td>M，L</td></tr></tbody></table><p>分类B</p><table><thead><tr><th>属性名</th><th>属性值</th></tr></thead><tbody><tr><td>Brand（品牌）</td><td>BBB</td></tr><tr><td>Color（颜色）</td><td>Blue，Black</td></tr><tr><td>Size（尺寸）</td><td>M，L，XL</td></tr></tbody></table><a id="more"></a><p><img src="https://i.loli.net/2019/04/08/5cab4e3da56cd.jpg" alt></p><h2 id="索引查询"><a href="#索引查询" class="headerlink" title="索引查询"></a>索引查询</h2><p>商品1【Brand：AAA】-&gt; 单一属性查询 -&gt; 可能属于ClassA,一定不属于ClassB</p><p>商品2【Color：Blue】-&gt; 单一属性查询 -&gt; 可能属于ClassA, 可能属于ClassB</p><p>商品3【Brand：AAA，Color：Red，Size：M】-&gt;全属性查询 -&gt;一定属于 ClassA</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>快速分类问题</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tracer：倒排索引-快速分类&quot;&gt;&lt;a href=&quot;#tracer：倒排索引-快速分类&quot; class=&quot;headerlink&quot; title=&quot;tracer：倒排索引+快速分类&quot;&gt;&lt;/a&gt;tracer：倒排索引+快速分类&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;索引，是为了加快信息主体查找过程，基于目标信息主体，预先创建的一种储存结构。&lt;/li&gt;
&lt;li&gt;倒排索引（Inverted index），是一种索引方法，基于信息主体的属性值进行构建。&lt;/li&gt;
&lt;li&gt;本工程基于Map+BitSet结构，采用：属性-&amp;gt;属性值-&amp;gt;信息主体唯一标识，预先构建倒排索引，加速查找过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;source code：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/warmqing/tracer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/warmqing/tracer&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;索引存储&quot;&gt;&lt;a href=&quot;#索引存储&quot; class=&quot;headerlink&quot; title=&quot;索引存储&quot;&gt;&lt;/a&gt;索引存储&lt;/h2&gt;&lt;p&gt;定义商品属性【Brand，Color，Size】&lt;/p&gt;
&lt;p&gt;分类A&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名&lt;/th&gt;
&lt;th&gt;属性值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brand（品牌）&lt;/td&gt;
&lt;td&gt;AAA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Color（颜色）&lt;/td&gt;
&lt;td&gt;Blue，Red，White&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Size（尺寸）&lt;/td&gt;
&lt;td&gt;M，L&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;分类B&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名&lt;/th&gt;
&lt;th&gt;属性值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brand（品牌）&lt;/td&gt;
&lt;td&gt;BBB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Color（颜色）&lt;/td&gt;
&lt;td&gt;Blue，Black&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Size（尺寸）&lt;/td&gt;
&lt;td&gt;M，L，XL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="日志" scheme="https://oolongbox.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="java" scheme="https://oolongbox.com/tags/java/"/>
    
      <category term="utils" scheme="https://oolongbox.com/tags/utils/"/>
    
  </entry>
  
  <entry>
    <title>使用Algolia索引hexo网站内容</title>
    <link href="https://oolongbox.com/2019/04/07/hexo-algolia/"/>
    <id>https://oolongbox.com/2019/04/07/hexo-algolia/</id>
    <published>2019-04-07T11:11:51.000Z</published>
    <updated>2019-04-08T15:19:40.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Algolia索引hexo网站内容"><a href="#使用Algolia索引hexo网站内容" class="headerlink" title="使用Algolia索引hexo网站内容"></a>使用Algolia索引hexo网站内容</h1><h2 id="Algolia配置"><a href="#Algolia配置" class="headerlink" title="Algolia配置"></a>Algolia配置</h2><p>进入hexo工作目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>在_config.yml中配置algolia选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: <span class="string">'applicationID'</span></span><br><span class="line">  apiKey: <span class="string">'apiKey'</span></span><br><span class="line">  indexName: <span class="string">'...'</span></span><br></pre></td></tr></table></figure><p>注册登录<a href="https://www.algolia.com" target="_blank" rel="noopener">https://www.algolia.com</a></p><p>找到如下：</p><p>Application ID</p><p><img src="https://i.loli.net/2019/04/08/5cab21bebae38.png" alt><br><a id="more"></a></p><p>search-only api key（这里配置仅查询使用即可）</p><p><img src="https://i.loli.net/2019/04/08/5cab21f135304.png" alt></p><p>indexName（需要新增index）</p><p><img src="https://i.loli.net/2019/04/08/5cab228466ea6.png" alt></p><h2 id="在Hexo主题中启用algolia"><a href="#在Hexo主题中启用algolia" class="headerlink" title="在Hexo主题中启用algolia"></a>在Hexo主题中启用algolia</h2><p>见各个主题配置</p><h2 id="algolia索引网站内容"><a href="#algolia索引网站内容" class="headerlink" title="algolia索引网站内容"></a>algolia索引网站内容</h2><p>新增具有Add object, Delete object, List indexes, Delete index权限的API key</p><p>如下：</p><p><img src="https://i.loli.net/2019/04/08/5cab238e33097.png" alt="1554719587049"></p><p>添加环境变量HEXO_ALGOLIA_INDEXING_KEY，执行hexo algolia命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ export HEXO_ALGOLIA_INDEXING_KEY=…</span><br><span class="line">$ ./node_modules/.bin/hexo algolia</span><br></pre></td></tr></table></figure><p>详细请见：<a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">https://github.com/oncletom/hexo-algolia</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Algolia索引hexo网站内容&quot;&gt;&lt;a href=&quot;#使用Algolia索引hexo网站内容&quot; class=&quot;headerlink&quot; title=&quot;使用Algolia索引hexo网站内容&quot;&gt;&lt;/a&gt;使用Algolia索引hexo网站内容&lt;/h1&gt;&lt;h2 id=&quot;Algolia配置&quot;&gt;&lt;a href=&quot;#Algolia配置&quot; class=&quot;headerlink&quot; title=&quot;Algolia配置&quot;&gt;&lt;/a&gt;Algolia配置&lt;/h2&gt;&lt;p&gt;进入hexo工作目录：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save hexo-algolia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在_config.yml中配置algolia选项：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;algolia:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  applicationID: &lt;span class=&quot;string&quot;&gt;&#39;applicationID&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  apiKey: &lt;span class=&quot;string&quot;&gt;&#39;apiKey&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  indexName: &lt;span class=&quot;string&quot;&gt;&#39;...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注册登录&lt;a href=&quot;https://www.algolia.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.algolia.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;找到如下：&lt;/p&gt;
&lt;p&gt;Application ID&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab21bebae38.png&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
      <category term="日志" scheme="https://oolongbox.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="java" scheme="https://oolongbox.com/tags/java/"/>
    
      <category term="scala" scheme="https://oolongbox.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://oolongbox.com/2019/04/03/hello-world/"/>
    <id>https://oolongbox.com/2019/04/03/hello-world/</id>
    <published>2019-04-03T02:20:26.184Z</published>
    <updated>2019-04-08T15:10:46.547Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="日志" scheme="https://oolongbox.com/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="Hello World" scheme="https://oolongbox.com/categories/%E6%97%A5%E5%BF%97/Hello-World/"/>
    
    
  </entry>
  
</feed>
